Question 1
Code Snippet:

java
Copy code
String name = "Sudha learns Oracle";
System.out.println(name.substring(7, 12));
Correct Answer: earns

Explanation: The substring method extracts a part of the string starting from index 7 up to, but not including, index 12. In the string "Sudha learns Oracle", the characters from index 7 to 11 are "earns", so the output is "earns".
Incorrect Options:

learns: This would be the result if the substring was taken from index 7 to 13 (substring(7, 13)), as "learns" spans from index 7 to 12 inclusive.

earns: This is actually the correct answer as explained above.

Question 2
Code Snippet:

java
Copy code
String emailId = "john#global.com";
System.out.println(emailId.indexOf('@'));
Correct Answer: -1

Explanation: The indexOf method returns -1 if the specified character or substring is not found in the string. Since '@' is not present in "john#global.com", the method returns -1.
Incorrect Options:

Any negative integer: While -1 is indeed a negative integer, indexOf specifically returns -1 to indicate the absence of the character or substring. There are no other negative integers returned.

1: This would be the result if '@' was present at index 1 of the string, which is not the case here.

0: This would be the result if the character '@' was at index 0, but it is not present in the string.

Question 3
Parameters for the indexOf method in the String class:

Correct Answers:

String: The indexOf method can take a String as an argument and will return the index of the first occurrence of the specified substring.
int: The indexOf method can also take an int, which represents a Unicode code point. It returns the index of the first occurrence of that character.
Incorrect Options:

float: The indexOf method does not accept float values. It expects either a String or an int.

double: Similar to float, double is not accepted by the indexOf method. It only accepts String or int.

Question 4
Code Snippet:

java
Copy code
String course = "Java Programming";
char c = course.charAt(16);
System.out.println(c);
Correct Answer: StringIndexOutOfBoundsException

Explanation: The charAt method throws StringIndexOutOfBoundsException if the index is out of the valid range, which is from 0 to length - 1. In this case, the string has a length of 16, so valid indices are 0 to 15. Index 16 is out of bounds.
Incorrect Options:

ArrayIndexOutOfBoundsException: This exception is thrown for arrays, not strings. The exception thrown here is related to string indices, so this is incorrect.

Compilation error: The code snippet is syntactically correct; the problem is with runtime bounds, not compilation.

g: This would be a valid result if charAt(16) were within bounds, but since index 16 is out of bounds, the actual result is an exception.
